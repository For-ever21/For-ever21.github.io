(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{546:function(t,e,r){"use strict";r.r(e);var a=r(9),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"前端git规范"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端git规范"}},[t._v("#")]),t._v(" 前端Git规范")]),t._v(" "),r("h3",{attrs:{id:"git分支命名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git分支命名"}},[t._v("#")]),t._v(" Git分支命名")]),t._v(" "),r("ul",[r("li",[t._v("master：主要用于跟踪稳定版本分支，一般直接指向生产部署的对应的release版本。同时作为拉分支的起点")]),t._v(" "),r("li",[t._v("feature/分支创建日期-分支功能点英文描述：特性（功能）分支，用于开发新的功能，不同的功能创建不同的功能分支，")]),t._v(" "),r("li",[t._v("release/分支创建日期-版本号：真正的版本化分支，每个分支都对应一个版本号，只能通过request merage进行合并，不能直接提交推送代码。该分支从master分支创建，创建之后发到测试环境进行测试，")])]),t._v(" "),r("h4",{attrs:{id:"具体的操作可以参考以下描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#具体的操作可以参考以下描述"}},[t._v("#")]),t._v(" 具体的操作可以参考以下描述")]),t._v(" "),r("ol",[r("li",[t._v("需求确认后，开发人员从"),r("strong",[t._v("master")]),t._v("创建"),r("strong",[t._v("feature")]),t._v("分支，例如是"),r("strong",[t._v("feature/20200506-V1.2.0")])]),t._v(" "),r("li",[t._v("开发完毕后，产品经理发起提测后，从"),r("strong",[t._v("master")]),t._v("分支拉出新分支建立新的"),r("strong",[t._v("release")]),t._v("分支等待合并，例如"),r("strong",[t._v("release/20200508-v1.2.0")]),t._v(",")]),t._v(" "),r("li",[t._v("同时提交"),r("strong",[t._v("feature")]),t._v("分支到新的"),r("strong",[t._v("release")]),t._v("分支的 merge request进行合并，发布到测试环境")]),t._v(" "),r("li",[t._v("测试环境通过后，直接部署这个"),r("strong",[t._v("release")]),t._v("分支到生产 同时，把"),r("strong",[t._v("master")]),t._v("分支使用"),r("strong",[t._v("git reset --hard commitID")]),t._v(" 直接指向该"),r("strong",[t._v("release")]),t._v("版本分支（"),r("strong",[t._v("不是合并分支")]),t._v("）")]),t._v(" "),r("li",[r("strong",[t._v("release")]),t._v("分支上线后，必须把该版本合到比它版本号更大的其他"),r("strong",[t._v("release")]),t._v("分支上并构建对应的版本"),r("strong",[t._v("tag")])]),t._v(" "),r("li",[t._v("上线后发现有bug需要进行紧急修复，则从这个分支直接拉出代码命名为"),r("strong",[t._v("feature/20200509-fixbugXXX")]),t._v("。 修复好后，项目技术负责人从"),r("strong",[t._v("release/20200508-v1.2.0")]),t._v("拉出并创建一个"),r("strong",[t._v("release/20200509-v1.2.0.1")]),t._v("的保护分支功能供合并提测。 "),r("strong",[t._v("release/20200509-v1.2.0.1")]),t._v("分支直接部署测试并通过后，直接部署 "),r("strong",[t._v("release/20200509-v1.2.0.1")]),t._v("到生产环境，完成一个hotfix周期。")])]),t._v(" "),r("h3",{attrs:{id:"重点强调"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重点强调"}},[t._v("#")]),t._v(" 重点强调")]),t._v(" "),r("ol",[r("li",[t._v("所有的代码修改都在feature分支进行，所有的合并和冲突解决都在release分支上进行")]),t._v(" "),r("li",[t._v("功能正常上线稳定后（一周），可删除原有的feature分支。")]),t._v(" "),r("li",[t._v("release分支可以只保留最近的3个版本，其他历史版本可以打tag形式进行归档保存。[tag的命名为release/日期+版本号]")]),t._v(" "),r("li",[t._v("测试过程中发现bug ，不能在release分支上直接改，需要在原feature分支进行改动。[防止部分功能不上，方便进行重新合并]")]),t._v(" "),r("li",[t._v("目前只打release分支（正式环境）的tag")])]),t._v(" "),r("p",[r("img",{attrs:{src:"/git.png",alt:""}})]),t._v(" "),r("h3",{attrs:{id:"git-commit-message格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-message格式"}},[t._v("#")]),t._v(" Git Commit Message格式")]),t._v(" "),r("p",[t._v("type : subject")]),t._v(" "),r("h4",{attrs:{id:"type-提交类型："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-提交类型："}},[t._v("#")]),t._v(" type 提交类型：")]),t._v(" "),r("ul",[r("li",[t._v("feature: 新特性")]),t._v(" "),r("li",[t._v("fix: 修改问题")]),t._v(" "),r("li",[t._v("style: 代码格式修改")]),t._v(" "),r("li",[t._v("test: 测试用例修改")]),t._v(" "),r("li",[t._v("docs: 文档修改")]),t._v(" "),r("li",[t._v("refactor: 代码重构")]),t._v(" "),r("li",[t._v("misc: 其他修改, 比如构建流程, 依赖管理")])]),t._v(" "),r("h4",{attrs:{id:"github-emoji"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#github-emoji"}},[t._v("#")]),t._v(" github emoji:")]),t._v(" "),r("p",[t._v("git commit 的时候可以使用 Emoji 为每次提交打上一个标签[新标签页查看大图，更清晰]\n"),r("img",{attrs:{src:"/github_emoji.jpg",alt:""}})]),t._v(" "),r("h4",{attrs:{id:"subject-提交描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#subject-提交描述"}},[t._v("#")]),t._v(" subject 提交描述:")]),t._v(" "),r("p",[t._v("对应内容是commit 目的的简短描述，一般不超过50个字符")]),t._v(" "),r("h3",{attrs:{id:"参考链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("A successful Git branching model"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/caiyongji/emoji-list",target:"_blank",rel:"noopener noreferrer"}},[t._v("github emoji"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5b4328bbf265da0fa21a6820",target:"_blank",rel:"noopener noreferrer"}},[t._v("必须知道的 Git 分支开发规范"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.open-open.com/lib/view/open1451353135339.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 在团队中的最佳实践--如何正确使用Git Flow"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/34223150",target:"_blank",rel:"noopener noreferrer"}},[t._v("优雅的提交你的 Git Commit Message"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);